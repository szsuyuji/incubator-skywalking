# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The server info.
# At here, `Server` represents a process in OS,
# e.g.
#   1. Spring boot application
#   2. A Tomcat server instance
type AppServerInfo {
    id: ID!
    osName: String!
    applicationId: Int!
    applicationCode: String
    callsPerSec: Int!
    host: String
    pid: Int
    ipv4: [String!]!
}

type CPUTrend {
    cost: [Int!]!
}

# The gc trend represents the numbers of Garbage Collector execution
type GCTrend {
    youngGC: [Int!]!
    oldGC: [Int!]!
}

# The memory used and max limit in heap and noheap space.
type MemoryTrend {
    heap: [Int!]!
    maxHeap: [Int!]!
    noheap: [Int!]!
    maxNoheap: [Int!]!
}

extend type Query {
    searchServer(keyword: String!, duration: Duration!): [AppServerInfo!]!
    getAllServer(applicationId: ID!, duration: Duration!): [AppServerInfo!]!
    getServerResponseTimeTrend(serverId: ID!, duration: Duration!): ResponseTimeTrend
    getServerTPSTrend(serverId: ID!, duration: Duration!): ThroughputTrend
    getCPUTrend(serverId: ID!, duration: Duration!): CPUTrend
    getGCTrend(serverId: ID!, duration: Duration!): GCTrend
    getMemoryTrend(serverId: ID!, duration: Duration!): MemoryTrend
}